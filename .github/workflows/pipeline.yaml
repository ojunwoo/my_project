name: Pipeline - Build, Push, Test, and deploy CloudFormation Stack 

on:
  push:
    branches:
      - main 
  workflow_dispatch:


jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/testapp_1:latest


  test:
    name: Test Image
    needs: build
    if: ${{ needs.build.result == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Start Docker container
        run: |
          docker run -d --name test-container ${{ secrets.DOCKERHUB_USERNAME }}/testapp_1:latest

      - name: Run test command inside container
        run: |
          docker exec test-container ls -la /app/
          
      - name: Stop and remove container
        run: |
          docker stop test-container
          docker rm test-container


  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configure AWS credentials for CloudFormation
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
     # Deploy the CloudFormation stack
      - name: Deploy CloudFormation stack
        run: |
          aws cloudformation deploy \
          --template-file test3.yml \
          --stack-name demo-stack2 \
        #  --s3-bucket pipline-test-bucket \
